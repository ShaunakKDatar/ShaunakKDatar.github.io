<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Raspberry Pi on The SKD Blog</title>
    <link>/tags/raspberry-pi/</link>
    <description>Recent content in Raspberry Pi on The SKD Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 29 Aug 2025 19:06:32 +0530</lastBuildDate><atom:link href="/tags/raspberry-pi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gsoc Final Work Submission</title>
      <link>/posts/gsoc-final-work-submission/</link>
      <pubDate>Fri, 29 Aug 2025 19:06:32 +0530</pubDate>
      
      <guid>/posts/gsoc-final-work-submission/</guid>
      <description>&lt;p&gt;Project Proposal: &lt;a href=&#34;https://docs.google.com/document/d/1NreikYpimpCXKtAVqa8RMzbgOyQgtGw7x1CQlPVAtJY/edit?usp=sharing&#34;&gt;https://docs.google.com/document/d/1NreikYpimpCXKtAVqa8RMzbgOyQgtGw7x1CQlPVAtJY/edit?usp=sharing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gitlab Activity: &lt;a href=&#34;https://gitlab.rtems.org/users/skdatar/activity&#34;&gt;https://gitlab.rtems.org/users/skdatar/activity&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Project Issue: &lt;a href=&#34;https://gitlab.rtems.org/rtems/programs/gsoc/-/issues/81&#34;&gt;https://gitlab.rtems.org/rtems/programs/gsoc/-/issues/81&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;code-contribution-list&#34;&gt;Code contribution list:&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Merge Request&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/363&#34;&gt;I2C (Polling)&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Implemented polling-based I2C driver.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/682&#34;&gt;I2C (Interrupt)&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Added TX interrupt support for I2C.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/509&#34;&gt;PWM Support&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Implemented PWM driver, tested with logic analyzer &amp;amp; audio jack.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/662&#34;&gt;DMA Support&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Added standard DMA, DMA Lite &amp;amp; DMA4 support (memory-to-memory).&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/docs/rtems-docs/-/merge_requests/178&#34;&gt;Docs (PWM)&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Documentation for PWM driver.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/docs/rtems-docs/-/merge_requests/186&#34;&gt;Docs (DMA)&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Documentation for DMA driver.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/665&#34;&gt;Header Guards&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Added C++ header guards to BSP header files.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/526&#34;&gt;Formatting Fix (raspberrypi.h)&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Fixed formatting issues in &lt;code&gt;include/bsp/raspberrypi.h&lt;/code&gt;.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/docs/rtems-docs/-/merge_requests/190&#34;&gt;Docs (I2C)&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Documentation for I2C driver.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;aim-of-the-project&#34;&gt;Aim of the project&lt;/h1&gt;
&lt;p&gt;The project aimed to have the support for I2C, PWM, DMA and Mailbox added to the Raspberry Pi 4b BSP.&lt;/p&gt;</description>
      <content>&lt;p&gt;Project Proposal: &lt;a href=&#34;https://docs.google.com/document/d/1NreikYpimpCXKtAVqa8RMzbgOyQgtGw7x1CQlPVAtJY/edit?usp=sharing&#34;&gt;https://docs.google.com/document/d/1NreikYpimpCXKtAVqa8RMzbgOyQgtGw7x1CQlPVAtJY/edit?usp=sharing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gitlab Activity: &lt;a href=&#34;https://gitlab.rtems.org/users/skdatar/activity&#34;&gt;https://gitlab.rtems.org/users/skdatar/activity&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Project Issue: &lt;a href=&#34;https://gitlab.rtems.org/rtems/programs/gsoc/-/issues/81&#34;&gt;https://gitlab.rtems.org/rtems/programs/gsoc/-/issues/81&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;code-contribution-list&#34;&gt;Code contribution list:&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Merge Request&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/363&#34;&gt;I2C (Polling)&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Implemented polling-based I2C driver.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/682&#34;&gt;I2C (Interrupt)&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Added TX interrupt support for I2C.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/509&#34;&gt;PWM Support&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Implemented PWM driver, tested with logic analyzer &amp;amp; audio jack.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/662&#34;&gt;DMA Support&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Added standard DMA, DMA Lite &amp;amp; DMA4 support (memory-to-memory).&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/docs/rtems-docs/-/merge_requests/178&#34;&gt;Docs (PWM)&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Documentation for PWM driver.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/docs/rtems-docs/-/merge_requests/186&#34;&gt;Docs (DMA)&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Documentation for DMA driver.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/665&#34;&gt;Header Guards&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Added C++ header guards to BSP header files.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/526&#34;&gt;Formatting Fix (raspberrypi.h)&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Fixed formatting issues in &lt;code&gt;include/bsp/raspberrypi.h&lt;/code&gt;.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/docs/rtems-docs/-/merge_requests/190&#34;&gt;Docs (I2C)&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Documentation for I2C driver.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;aim-of-the-project&#34;&gt;Aim of the project&lt;/h1&gt;
&lt;p&gt;The project aimed to have the support for I2C, PWM, DMA and Mailbox added to the Raspberry Pi 4b BSP.&lt;/p&gt;
&lt;h2 id=&#34;i2c-support&#34;&gt;I2C Support&lt;/h2&gt;
&lt;p&gt;The I2C support was upstreamed in two separate MRs. One which implemented the Polling version.
Another which added the TX Interrupt support to the driver.&lt;/p&gt;
&lt;p&gt;I2C was tested on the MPU6050 as well as the logic analyser&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/MPU6050_I2C.png&#34; alt=&#34;MPU6050 using I2C&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/I2C_LA.jpeg&#34; alt=&#34;I2C on Logic analyser&#34;&gt;&lt;/p&gt;
&lt;p&gt;Polling Merge Request: &lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/363&#34;&gt;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/363&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Interrupt Merge Request: &lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/682&#34;&gt;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/682&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;pwm-support&#34;&gt;PWM Support&lt;/h2&gt;
&lt;p&gt;The PWM support was added and was tested using a logic analyser
&lt;img src=&#34;../../images/PWM_Output.jpeg&#34; alt=&#34;PWM Testing Output&#34;&gt;&lt;/p&gt;
&lt;p&gt;PWM1_x channels are routed to the audio jack. PWM1 was then tested using the Audio Output on the RaspberryPi&lt;/p&gt;
&lt;p&gt;PWM Merge Request: &lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/509&#34;&gt;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/509&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;dma-support&#34;&gt;DMA Support&lt;/h2&gt;
&lt;p&gt;The DMA Support was a very interesting part. During the coding period I could
complete the memory-to-memory transfer.
It involved a lot of cache management and handling control block structures.&lt;/p&gt;
&lt;p&gt;Apart for the standard DMA there are two other types of DMA: DMA Lite and DMA4&lt;/p&gt;
&lt;p&gt;All of these were tested for memory-to-memory transfer.&lt;/p&gt;
&lt;p&gt;The standard DMA test:
&lt;img src=&#34;../../images/DMA-std.png&#34; alt=&#34;DMA Testing&#34;&gt;&lt;/p&gt;
&lt;p&gt;DMA Lite test:
&lt;img src=&#34;../../images/DMA-Lite.png&#34; alt=&#34;DMA Lite Testing&#34;&gt;&lt;/p&gt;
&lt;p&gt;DMA4 test:
&lt;img src=&#34;../../images/DMA4.png&#34; alt=&#34;DMA4 Testing&#34;&gt;&lt;/p&gt;
&lt;p&gt;DMA Merge Request: &lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/662&#34;&gt;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/662&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;mailbox-support&#34;&gt;Mailbox Support&lt;/h2&gt;
&lt;p&gt;Preliminary work on the Mailbox was started, though not completed in the coding period.&lt;/p&gt;
&lt;h2 id=&#34;other-merged-mrs&#34;&gt;Other Merged MRs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/docs/rtems-docs/-/merge_requests/186&#34;&gt;Documentation for DMA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/docs/rtems-docs/-/merge_requests/178&#34;&gt;Documentation for PWM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/665&#34;&gt;Adding C++ header guards for the BSPs header files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/526&#34;&gt;Fix the formatting for the include/bsp/raspberrypi.h file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.rtems.org/rtems/docs/rtems-docs/-/merge_requests/190&#34;&gt;Documentation for I2C&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;future-work&#34;&gt;Future Work&lt;/h1&gt;
&lt;p&gt;There is considerable work to be done on the Raspberry Pi BSP. The support for Mailbox is incomplete,
the sdhci support from GSoC 2024 still remains to be completed. The BSP could also use support for Ethernet and USB.&lt;/p&gt;
&lt;p&gt;I plan to continue working on the Raspberry Pi BSP in particular with RTEMS in general.&lt;/p&gt;
&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;The time I dedicated to working on the Raspberry Pi BSP, helped me gain a deeper understanding
of the architecture and the hardware. It sharpened my coding skills, helped me understand open-source.
I would like to thank my mentor: Kinsey and Christian for putting in the time and effort, helping me understand good coding practices, understand the intricacies of the hardware and reviewing my MRs.
A huge thank you to Google for connecting students and contributors like me to organisations like RTEMS.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>GSoC Midterm evaluation</title>
      <link>/posts/gsoc-midterm-evaluations/</link>
      <pubDate>Tue, 15 Jul 2025 22:29:25 +0530</pubDate>
      
      <guid>/posts/gsoc-midterm-evaluations/</guid>
      <description>&lt;p&gt;Hello readers!&lt;/p&gt;
&lt;p&gt;The GSoC 2025 midterm evaluations are here, and I’d like to take this opportunity to summarize the work I’ve done so far. I’m contributing to the RTEMS Project, focusing on adding and improving peripheral support for the Raspberry Pi 4B BSP. My proposal is centered around four core components: &lt;strong&gt;I2C&lt;/strong&gt;, &lt;strong&gt;PWM&lt;/strong&gt;, &lt;strong&gt;DMA&lt;/strong&gt;, and &lt;strong&gt;Mailbox&lt;/strong&gt;. Out of these, I’ve:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Merged I2C support&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Merged PWM support&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Got DMA working for memory-to-memory transfers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s take a closer look at each component:&lt;/p&gt;</description>
      <content>&lt;p&gt;Hello readers!&lt;/p&gt;
&lt;p&gt;The GSoC 2025 midterm evaluations are here, and I’d like to take this opportunity to summarize the work I’ve done so far. I’m contributing to the RTEMS Project, focusing on adding and improving peripheral support for the Raspberry Pi 4B BSP. My proposal is centered around four core components: &lt;strong&gt;I2C&lt;/strong&gt;, &lt;strong&gt;PWM&lt;/strong&gt;, &lt;strong&gt;DMA&lt;/strong&gt;, and &lt;strong&gt;Mailbox&lt;/strong&gt;. Out of these, I’ve:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Merged I2C support&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Merged PWM support&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Got DMA working for memory-to-memory transfers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s take a closer look at each component:&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;i2c&#34;&gt;I2C&lt;/h2&gt;
&lt;p&gt;The I2C peripheral on the Raspberry Pi is accessed via the &lt;code&gt;i2c_bus&lt;/code&gt; layer in RTEMS&amp;rsquo;s &lt;code&gt;cpukit&lt;/code&gt;. I implemented functions like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rpi_i2c_transfer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rpi_i2c_set_clock&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rpi_i2c_destroy&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;hellip;along with several helper functions to configure the BSC (Broadcom Serial Controller) registers.&lt;/p&gt;
&lt;p&gt;I tested the driver using an MPU6050 sensor and verified correct readings. After testing, I raised a &lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/363&#34;&gt;merge request&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Most of my time after the testing phase was spent addressing review comments. This helped me understand how to write code that is not only functional, but also &lt;strong&gt;readable&lt;/strong&gt;, &lt;strong&gt;maintainable&lt;/strong&gt;, and &lt;strong&gt;aligned with RTEMS&amp;rsquo;s coding guidelines&lt;/strong&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pwm&#34;&gt;PWM&lt;/h2&gt;
&lt;p&gt;The second part of my project involved adding support for the PWM peripheral on the Raspberry Pi 4B. PWM was relatively straightforward, and I spent around two weeks getting it up and running.&lt;/p&gt;
&lt;p&gt;I implemented functions to initialize the PWM master and individual channels, as well as to update the duty cycle of an already-running channel. Since PWM is tightly coupled with the Clock Manager, I also implemented static helper functions to configure the clock source and dividers.&lt;/p&gt;
&lt;p&gt;For testing, I wrote a user application that exercised both PWM channels. PWM0 is mapped to GPIOs, so I verified its output using a logic analyzer. PWM1, however, is connected to the audio jack on the Pi. To test this, I configured it to output a 440Hz tone and connected headphones to hear the sound.&lt;/p&gt;
&lt;p&gt;After testing, I submitted a &lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/merge_requests/509&#34;&gt;merge request&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;dma&#34;&gt;DMA&lt;/h2&gt;
&lt;p&gt;DMA is the most involving and interesting part of the project so far. Unlike I2C or PWM, it’s not just about configuring registers—it also involves creating a control block, aligning it to a 256-bit address, and setting up memory for source and destination buffers correctly.&lt;/p&gt;
&lt;p&gt;Initially, I tested DMA with a simple single-integer transfer, which worked fine on QEMU but failed on actual hardware. After discussions with my mentors, I realized the issue was due to cache coherence—the CPU cache was not in sync with memory when the DMA engine performed the transfer.&lt;/p&gt;
&lt;p&gt;To fix this, I modified the memory allocation to ensure proper cache-line alignment, added manual cache flushes and invalidations using RTEMS APIs, and rewrote the test case to use a larger buffer instead of a single integer. With these changes, the memory-to-memory DMA transfer worked reliably on real hardware.&lt;/p&gt;
&lt;p&gt;After some restructuring and cleanup, I plan to raise a merge request for DMA support soon.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;This has been my progress till the midterm. It&amp;rsquo;s been super fun working on this project—I’m learning a lot of new things and growing as an embedded engineer.&lt;/p&gt;
&lt;p&gt;That’s it for now.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Until next time — keep building, keep tinkering, and keep contributing.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Cheers,&lt;br&gt;
Shaunak&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Bits to BSPs – GSoC Midterm Recap</title>
      <link>/posts/gsoc-midterm-deliverables/</link>
      <pubDate>Wed, 25 Jun 2025 00:48:25 +0530</pubDate>
      
      <guid>/posts/gsoc-midterm-deliverables/</guid>
      <description>&lt;p&gt;Hello readers!&lt;/p&gt;
&lt;p&gt;We’re about four weeks into GSoC 2025, and it&amp;rsquo;s been an incredible ride so far. I&amp;rsquo;m thrilled to be working with the RTEMS Project this summer. In this post, I want to walk you through what I’ve been working on, what’s already done, and what’s coming up before the midterm evaluations.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-am-i-going-to-talk-about&#34;&gt;What am I going to talk about?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;What project am I working on for GSoC 2025?&lt;/li&gt;
&lt;li&gt;What have I accomplished so far?&lt;/li&gt;
&lt;li&gt;What do I plan to complete before midterm evaluations?&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;the-project&#34;&gt;The Project&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m contributing to the project:&lt;br&gt;
&lt;strong&gt;&lt;a href=&#34;https://summerofcode.withgoogle.com/programs/2025/projects/CUL4f3Nh&#34;&gt;Adding I2C, PWM, DMA and Mailbox Support to the Raspberry Pi 4B BSP in RTEMS&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</description>
      <content>&lt;p&gt;Hello readers!&lt;/p&gt;
&lt;p&gt;We’re about four weeks into GSoC 2025, and it&amp;rsquo;s been an incredible ride so far. I&amp;rsquo;m thrilled to be working with the RTEMS Project this summer. In this post, I want to walk you through what I’ve been working on, what’s already done, and what’s coming up before the midterm evaluations.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-am-i-going-to-talk-about&#34;&gt;What am I going to talk about?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;What project am I working on for GSoC 2025?&lt;/li&gt;
&lt;li&gt;What have I accomplished so far?&lt;/li&gt;
&lt;li&gt;What do I plan to complete before midterm evaluations?&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;the-project&#34;&gt;The Project&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m contributing to the project:&lt;br&gt;
&lt;strong&gt;&lt;a href=&#34;https://summerofcode.withgoogle.com/programs/2025/projects/CUL4f3Nh&#34;&gt;Adding I2C, PWM, DMA and Mailbox Support to the Raspberry Pi 4B BSP in RTEMS&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As the title suggests, the goal is to implement and upstream support for the following peripherals in the Raspberry Pi 4B Board Support Package (BSP) for RTEMS:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I2C&lt;/li&gt;
&lt;li&gt;PWM&lt;/li&gt;
&lt;li&gt;Mailbox&lt;/li&gt;
&lt;li&gt;DMA&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;why-these-peripherals&#34;&gt;Why these peripherals?&lt;/h3&gt;
&lt;p&gt;There are two perspectives here:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;One&lt;/strong&gt;, I2C and PWM are fundamental interfaces. Many BSPs already support them – for example, I2C in &lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/tree/main/bsps/arm/raspberrypi/i2c&#34;&gt;arm/raspberrypi&lt;/a&gt; and PWM in &lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/tree/main/bsps/arm/beagle/pwm&#34;&gt;arm/beagle&lt;/a&gt;.&lt;br&gt;
&lt;strong&gt;Two&lt;/strong&gt;, DMA and Mailbox are essential for enabling SDHCI support, which was a pending item from last year’s RTEMS efforts.&lt;/p&gt;
&lt;p&gt;A more personal reason: I2C and PWM are what powered the self-balancing feature of the &lt;a href=&#34;https://github.com/SRA-VJTI/Wall-E&#34;&gt;Wall-E robot from SRA&lt;/a&gt;. I first learned about them back in my first year at college, taught First Year students about this robot in my second year — and now, getting to implement them at RTEMS feels increadibly fulfilling.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;work-done-so-far&#34;&gt;Work Done So Far&lt;/h2&gt;
&lt;p&gt;These weeks have flown by! I&amp;rsquo;ve written and debugged a lot of code, fixed formatting issues, and had two merge requests accepted. It’s been a fast-paced journey, and I’m incredibly grateful to my mentors, Christian and Kinsey, for their guidance and quick feedback.&lt;/p&gt;
&lt;h3 id=&#34;whats-been-merged&#34;&gt;What’s been merged?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;✅ &lt;strong&gt;PWM Driver for Raspberry Pi 4B&lt;/strong&gt;:&lt;br&gt;
&lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/commit/d4755476bcc95c1a1864fa20c1fc7255f509074a&#34;&gt;Merged Commit&lt;/a&gt;&lt;br&gt;
The driver allows users to configure both PWM controllers (PWM0 and PWM1) and their respective channels. A detailed blog post on usage and design is on the way—stay tuned!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;✅ &lt;strong&gt;Formatting fixes&lt;/strong&gt; for the BSP header:&lt;br&gt;
&lt;a href=&#34;https://gitlab.rtems.org/rtems/rtos/rtems/-/commit/1c9e91d25bdc7175a41b88c306d7ed03697dc66f#f6733755e37b7dc68c7ae64c1e9ec3e1b8a19511&#34;&gt;raspberrypi.h&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;other-contributions&#34;&gt;Other Contributions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Re-tested the I2C driver and handled an edge case involving 0-length transfers.&lt;/li&gt;
&lt;li&gt;Started digging into the DMA controller documentation to prep for the next phase.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;plan-before-midterm-evaluations&#34;&gt;Plan Before Midterm Evaluations&lt;/h2&gt;
&lt;p&gt;After syncing up with my mentors, here’s what we’ve decided as the midterm deliverables:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; I2C driver merged upstream&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; PWM driver merged upstream&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Significant progress on either DMA or Mailbox support&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The PWM and I2C work has been throughly tested and upstreamed. I have started work on implementing the DMA controller.&lt;/p&gt;
&lt;p&gt;With 2–3 weeks left until evaluations, I&amp;rsquo;m focused and hopeful. Let’s keep building and contributing to this wonderful ecosystem called &lt;strong&gt;open source&lt;/strong&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;That’s it for now — but there’s a lot more coming soon!
If you’re into embedded systems, RTEMS, or just love geeking out over low-level stuff, I’d love to chat. Feel free to reach out anytime!&lt;/p&gt;
&lt;p&gt;Until next time — keep building, keep tinkering, and keep contributing.&lt;/p&gt;
&lt;p&gt;Cheers,&lt;br&gt;
Shaunak&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Running RTEMS on Raspberry Pi 4B</title>
      <link>/posts/running-rtems-on-raspberrypi4b/</link>
      <pubDate>Wed, 11 Jun 2025 21:42:22 +0530</pubDate>
      
      <guid>/posts/running-rtems-on-raspberrypi4b/</guid>
      <description>&lt;p&gt;&lt;strong&gt;RTEMS (Real-Time Executive for Multiprocessor Systems)&lt;/strong&gt; is a real-time operating system used in embedded systems, offering a rich set of Board Support Packages (BSPs) for various platforms. One such platform is the &lt;strong&gt;Raspberry Pi 4B&lt;/strong&gt;, a popular board among hobbyists, educators, and industry professionals. In this post, I’ll walk you through setting up RTEMS on the Raspberry Pi 4B from scratch.&lt;/p&gt;
&lt;p&gt;Let’s dive in!&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;-setting-up-the-environment&#34;&gt;🚀 Setting Up the Environment&lt;/h1&gt;
&lt;p&gt;First, create a working directory. Ensure that &lt;code&gt;git&lt;/code&gt; is installed on your host machine.&lt;/p&gt;</description>
      <content>&lt;p&gt;&lt;strong&gt;RTEMS (Real-Time Executive for Multiprocessor Systems)&lt;/strong&gt; is a real-time operating system used in embedded systems, offering a rich set of Board Support Packages (BSPs) for various platforms. One such platform is the &lt;strong&gt;Raspberry Pi 4B&lt;/strong&gt;, a popular board among hobbyists, educators, and industry professionals. In this post, I’ll walk you through setting up RTEMS on the Raspberry Pi 4B from scratch.&lt;/p&gt;
&lt;p&gt;Let’s dive in!&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;-setting-up-the-environment&#34;&gt;🚀 Setting Up the Environment&lt;/h1&gt;
&lt;p&gt;First, create a working directory. Ensure that &lt;code&gt;git&lt;/code&gt; is installed on your host machine.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -p $HOME/quick-start/src
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd $HOME/quick-start/src
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Clone the necessary repositories:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://gitlab.rtems.org/rtems/tools/rtems-source-builder.git rsb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://gitlab.rtems.org/rtems/rtos/rtems.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;rtems&lt;/code&gt; repo contains the RTEMS source, while &lt;code&gt;rsb&lt;/code&gt; (RTEMS Source Builder) helps you build the toolchain and BSP.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;-installing-the-toolchain&#34;&gt;🔧 Installing the Toolchain&lt;/h1&gt;
&lt;p&gt;Now, build and install the AArch64 toolchain for the Raspberry Pi 4B:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd $HOME/quick-start/src/rsb/rtems
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;../source-builder/sb-set-builder --prefix&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$HOME/quick-start/rtems/7 7/rtems-aarch64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once completed, verify the toolchain:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$HOME/quick-start/rtems/7/bin/aarch64-rtems7-gcc --version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;-building-the-bsp&#34;&gt;🧱 Building the BSP&lt;/h1&gt;
&lt;p&gt;Let’s build the &lt;strong&gt;aarch64/raspberrypi4b&lt;/strong&gt; BSP.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd $HOME/quick-start/src/rtems
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[aarch64/raspberrypi4b]&amp;#34;&lt;/span&gt; &amp;gt; config.ini
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./waf configure --prefix&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$HOME/quick-start/rtems/7
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./waf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./waf install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;-creating-the-rtems-application&#34;&gt;📝 Creating the RTEMS Application&lt;/h1&gt;
&lt;p&gt;Now that the BSP is ready, let’s write a basic RTEMS application.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -p $HOME/quick-start/src/app/hello
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd $HOME/quick-start/src/app/hello
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Download Waf and make it executable:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl https://waf.io/waf-2.0.19 &amp;gt; waf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod +x waf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Initialize a Git repo and add RTEMS Waf support:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule add https://gitlab.rtems.org/rtems/tools/rtems_waf.git rtems_waf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;-wscript&#34;&gt;🛠 &lt;code&gt;wscript&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; __future__ &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; print_function
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rtems_version &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;7&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; rtems_waf.rtems &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; rtems
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error: no rtems_waf git submodule&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;init&lt;/span&gt;(ctx):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    rtems&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;init(ctx, version &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rtems_version, long_commands &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bsp_configure&lt;/span&gt;(conf, arch_bsp):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;options&lt;/span&gt;(opt):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    rtems&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;options(opt)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;configure&lt;/span&gt;(conf):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    rtems&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;configure(conf, bsp_configure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bsp_configure)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;(bld):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    rtems&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;build(bld)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    bld(features &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c cprogram&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        target &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hello.exe&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cflags &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-g -O2&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        source &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hello.c&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;-helloc&#34;&gt;💬 &lt;code&gt;hello.c&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;rtems.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rtems_task &lt;span style=&#34;color:#a6e22e&#34;&gt;Init&lt;/span&gt;(rtems_task_argument ignored)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Hello World&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;I am Shaunak Datar&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define CONFIGURE_APPLICATION_NEEDS_CLOCK_DRIVER
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define CONFIGURE_APPLICATION_NEEDS_CONSOLE_DRIVER
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define CONFIGURE_UNLIMITED_OBJECTS
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define CONFIGURE_UNIFIED_WORK_AREAS
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define CONFIGURE_RTEMS_INIT_TASKS_TABLE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define CONFIGURE_INIT
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;rtems/confdefs.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Configure and build the app:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./waf configure --rtems&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$HOME/quick-start/rtems/7 --rtems-bsp&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;aarch64/raspberrypi
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./waf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create the bootable kernel image:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;~/quick-start/rtems/7/bin/aarch64-rtems7-objcopy -Obinary build/aarch64-rtems7-raspberrypi4b/hello.exe build/kernel8.img
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Copy &lt;code&gt;kernel8.img&lt;/code&gt; to your SD card. In the SD card’s &lt;code&gt;config.txt&lt;/code&gt;, add:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;arm_64bit&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dtoverlay&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;disable-bt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;-connecting-to-the-raspberry-pi&#34;&gt;📟 Connecting to the Raspberry Pi&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Wiring (via USB-to-UART):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pi Pin 8 (TX) → USB RX&lt;/li&gt;
&lt;li&gt;Pi Pin 10 (RX) → USB TX&lt;/li&gt;
&lt;li&gt;Pi GND → USB GND&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Find your USB device:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls /dev/cu.*
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Use &lt;code&gt;minicom&lt;/code&gt; or any serial terminal at &lt;strong&gt;115200 baud&lt;/strong&gt;, &lt;strong&gt;8N1&lt;/strong&gt; settings.&lt;/p&gt;
&lt;p&gt;You should see something like this:
&lt;img src=&#34;../../images/hello-world-rtems-rpi.png&#34; alt=&#34;RTEMS Hello World on Raspberry Pi&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;That’s it! You’ve now got RTEMS running on your Raspberry Pi 4B.&lt;/p&gt;
&lt;p&gt;Want to know more about my work on this? Check out my &lt;a href=&#34;https://summerofcode.withgoogle.com/programs/2025/projects/CUL4f3Nh&#34;&gt;GSoC 2025 RTEMS project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy hacking! 🤓&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
